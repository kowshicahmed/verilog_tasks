Qflow synthesis logfile created on Fr 15. Mai 15:24:41 CEST 2020
Running yosys for verilog parsing and synthesis
yosys  -s alu.ys

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)


-- Executing script file `alu.ys' --

1. Executing Liberty frontend.
Imported 39 cell types from liberty file.

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v' to AST representation.
Generating RTLIL representation for module `\alu'.
Note: Assuming pure combinatorial block at /home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:13 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

3. Executing SYNTH pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \alu

3.1.2. Analyzing design hierarchy..
Top module:  \alu
Removed 0 unused modules.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.2.3. Executing PROC_INIT pass (extract init attributes).

3.2.4. Executing PROC_ARST pass (detect async resets in processes).

3.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\alu.$proc$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:13$3'.
     1/11: $2\zero_flag[0:0]
     2/11: $1\zero_flag[0:0]
     3/11: $7\alu_output[15:0]
     4/11: $6\alu_output[15:0]
     5/11: $5\alu_output[15:0]
     6/11: $4\alu_output[15:0]
     7/11: $3\alu_output[15:0]
     8/11: $2\alu_output[15:0]
     9/11: $1\alu_output[15:0]
    10/11: $0\zero_flag[0:0]
    11/11: $0\alu_output[15:0]

3.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\alu.\alu_output' from process `\alu.$proc$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:13$3'.
No latch inferred for signal `\alu.\zero_flag' from process `\alu.$proc$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:13$3'.

3.2.7. Executing PROC_DFF pass (convert process syncs to FFs).

3.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 9 empty switches in `\alu.$proc$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:13$3'.
Removing empty process `alu.$proc$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:13$3'.
Cleaned up 9 empty switches.

3.3. Executing OPT_EXPR pass (perform const folding).
Replacing $shr cell `$shr$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:11$2' (B=15, SHR=15) in module `alu' with fixed wiring: { 15'000000000000000 $add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:11$1_Y [16:15] }
Replacing $eq cell `$procmux$91_CMP0' in module `alu' with $logic_not.
Replacing $eq cell `$eq$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:64$16' in module `alu' with $logic_not.
Replacing $ne cell `$ne$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:66$17' in module `alu' with $logic_not.

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..
  removing unused `$reduce_bool' cell `$ne$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:66$17'.

3.5. Executing CHECK pass (checking for obvious problems).
checking module alu..
found and reported 0 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
  Cell `$procmux$81_CMP0' is identical to cell `$procmux$31_CMP0'.
    Redirecting output \Y: $procmux$81_CMP = $procmux$31_CMP
    Removing $eq cell `$procmux$81_CMP0' from module `\alu'.
  Cell `$procmux$82_CMP0' is identical to cell `$procmux$38_CMP0'.
    Redirecting output \Y: $procmux$82_CMP = $procmux$38_CMP
    Removing $eq cell `$procmux$82_CMP0' from module `\alu'.
  Cell `$procmux$83_CMP0' is identical to cell `$procmux$46_CMP0'.
    Redirecting output \Y: $procmux$83_CMP = $procmux$46_CMP
    Removing $eq cell `$procmux$83_CMP0' from module `\alu'.
  Cell `$procmux$84_CMP0' is identical to cell `$procmux$55_CMP0'.
    Redirecting output \Y: $procmux$84_CMP = $procmux$55_CMP
    Removing $eq cell `$procmux$84_CMP0' from module `\alu'.
  Cell `$procmux$86_CMP0' is identical to cell `$procmux$66_CMP0'.
    Redirecting output \Y: $procmux$86_CMP = $procmux$66_CMP
    Removing $eq cell `$procmux$86_CMP0' from module `\alu'.
  Cell `$procmux$87_CMP0' is identical to cell `$procmux$78_CMP0'.
    Redirecting output \Y: $procmux$87_CMP = $procmux$78_CMP
    Removing $eq cell `$procmux$87_CMP0' from module `\alu'.
Removed a total of 6 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$24 (pure)
    Root of a mux tree: $procmux$80 (pure)
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$21.
    dead port 2/2 on $mux $procmux$30.
    dead port 2/2 on $mux $procmux$37.
    dead port 2/2 on $mux $procmux$45.
    dead port 2/2 on $mux $procmux$54.
    dead port 2/2 on $mux $procmux$65.
    dead port 2/2 on $mux $procmux$77.
Removed 7 multiplexer ports.

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alu.
Performed a total of 0 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
Removed a total of 0 cells.

3.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..

3.6.8. Executing OPT_EXPR pass (perform const folding).

3.6.9. Rerunning OPT passes. (Maybe there is more to do..)

3.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$24 (pure)
    Root of a mux tree: $procmux$80 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alu.
Performed a total of 0 changes.

3.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
Removed a total of 0 cells.

3.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..

3.6.15. Executing OPT_EXPR pass (perform const folding).

3.6.16. Finished OPT passes. (There is nothing left to do.)

3.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 17) from port A of cell alu.$add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:11$1 ($add).
Removed top 1 bits (of 17) from port B of cell alu.$add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:11$1 ($add).
Removed top 1 bits (of 17) from port Y of cell alu.$add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:11$1 ($add).
Removed top 15 bits (of 16) from mux cell alu.$procmux$28 ($mux).
Removed top 15 bits (of 16) from mux cell alu.$procmux$35 ($mux).
Removed top 15 bits (of 16) from mux cell alu.$procmux$43 ($mux).
Removed top 15 bits (of 16) from mux cell alu.$procmux$52 ($mux).
Removed top 15 bits (of 16) from mux cell alu.$procmux$63 ($mux).
Removed top 15 bits (of 16) from mux cell alu.$procmux$75 ($mux).
Removed top 1 bits (of 4) from port B of cell alu.$procmux$88_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell alu.$procmux$89_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell alu.$procmux$90_CMP0 ($eq).
Removed top 15 bits (of 16) from wire alu.$2\alu_output[15:0].
Removed top 15 bits (of 16) from wire alu.$3\alu_output[15:0].
Removed top 15 bits (of 16) from wire alu.$4\alu_output[15:0].
Removed top 15 bits (of 16) from wire alu.$5\alu_output[15:0].
Removed top 15 bits (of 16) from wire alu.$6\alu_output[15:0].
Removed top 15 bits (of 16) from wire alu.$7\alu_output[15:0].
Removed top 2 bits (of 17) from wire alu.$add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:11$1_Y.

3.8. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module alu:
  creating $macc model for $add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:11$1 ($add).
  creating $macc model for $add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:20$4 ($add).
  creating $macc model for $add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:38$11 ($add).
  creating $macc model for $neg$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:38$10 ($neg).
  merging $macc model for $neg$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:38$10 into $add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:38$11.
  creating $alu model for $macc $add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:38$11.
  creating $alu model for $macc $add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:20$4.
  creating $alu model for $macc $add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:11$1.
  creating $alu model for $ge$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:46$13 ($ge): new $alu
  creating $alu model for $ge$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:56$15 ($ge): new $alu
  creating $alu model for $lt$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:41$12 ($lt): merged with $ge$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:46$13.
  creating $alu model for $lt$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:51$14 ($lt): merged with $ge$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:56$15.
  creating $alu model for $eq$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:29$8 ($eq): merged with $ge$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:56$15.
  creating $alu model for $ne$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:34$9 ($ne): merged with $ge$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:56$15.
  creating $alu cell for $ge$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:56$15, $lt$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:51$14, $eq$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:29$8, $ne$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:34$9: $auto$alumacc.cc:470:replace_alu$101
  creating $alu cell for $ge$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:46$13, $lt$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:41$12: $auto$alumacc.cc:470:replace_alu$116
  creating $alu cell for $add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:11$1: $auto$alumacc.cc:470:replace_alu$131
  creating $alu cell for $add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:20$4: $auto$alumacc.cc:470:replace_alu$134
  creating $alu cell for $add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:38$11: $auto$alumacc.cc:470:replace_alu$137
  created 5 $alu and 0 $macc cells.

3.9. Executing SHARE pass (SAT-based resource sharing).

3.10. Executing OPT pass (performing simple optimizations).

3.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing away select inverter for $mux cell `$procmux$35' in module `alu'.
Optimizing away select inverter for $mux cell `$procmux$52' in module `alu'.
Optimizing away select inverter for $mux cell `$procmux$63' in module `alu'.

3.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
  Cell `$auto$alumacc.cc:470:replace_alu$134' is identical to cell `$auto$alumacc.cc:470:replace_alu$131'.
    Redirecting output \CO: $auto$alumacc.cc:484:replace_alu$136 = $auto$alumacc.cc:484:replace_alu$133
    Redirecting output \X: $auto$alumacc.cc:483:replace_alu$135 = $auto$alumacc.cc:483:replace_alu$132
    Redirecting output \Y: $add$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:20$4_Y = { \carryout $auto$wreduce.cc:347:run$98 [14:0] }
    Removing $alu cell `$auto$alumacc.cc:470:replace_alu$134' from module `\alu'.
Removed a total of 1 cells.

3.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$24 (pure)
    Root of a mux tree: $procmux$80 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alu.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$106: { $auto$alumacc.cc:483:replace_alu$102 [0] $auto$alumacc.cc:483:replace_alu$102 [1] $auto$alumacc.cc:483:replace_alu$102 [2] $auto$alumacc.cc:483:replace_alu$102 [3] $auto$alumacc.cc:483:replace_alu$102 [4] $auto$alumacc.cc:483:replace_alu$102 [5] $auto$alumacc.cc:483:replace_alu$102 [6] $auto$alumacc.cc:483:replace_alu$102 [7] $auto$alumacc.cc:483:replace_alu$102 [8] $auto$alumacc.cc:483:replace_alu$102 [9] $auto$alumacc.cc:483:replace_alu$102 [10] $auto$alumacc.cc:483:replace_alu$102 [11] $auto$alumacc.cc:483:replace_alu$102 [12] $auto$alumacc.cc:483:replace_alu$102 [13] $auto$alumacc.cc:483:replace_alu$102 [14] $auto$alumacc.cc:483:replace_alu$102 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$123: { $auto$alumacc.cc:483:replace_alu$117 [0] $auto$alumacc.cc:483:replace_alu$117 [1] $auto$alumacc.cc:483:replace_alu$117 [2] $auto$alumacc.cc:483:replace_alu$117 [3] $auto$alumacc.cc:483:replace_alu$117 [4] $auto$alumacc.cc:483:replace_alu$117 [5] $auto$alumacc.cc:483:replace_alu$117 [6] $auto$alumacc.cc:483:replace_alu$117 [7] $auto$alumacc.cc:483:replace_alu$117 [8] $auto$alumacc.cc:483:replace_alu$117 [9] $auto$alumacc.cc:483:replace_alu$117 [10] $auto$alumacc.cc:483:replace_alu$117 [11] $auto$alumacc.cc:483:replace_alu$117 [12] $auto$alumacc.cc:483:replace_alu$117 [13] $auto$alumacc.cc:483:replace_alu$117 [14] $auto$alumacc.cc:483:replace_alu$117 [15] }
  Optimizing cells in module \alu.
Performed a total of 2 changes.

3.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
Removed a total of 0 cells.

3.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..
  removing unused `$neg' cell `$neg$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:38$10'.
  removing unused `$not' cell `$auto$alumacc.cc:58:get_gt$129'.
  removing unused `$not' cell `$auto$alumacc.cc:70:get_ne$114'.
  removing unused `$not' cell `$auto$alumacc.cc:58:get_gt$112'.

3.10.8. Executing OPT_EXPR pass (perform const folding).

3.10.9. Rerunning OPT passes. (Maybe there is more to do..)

3.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$24 (pure)
    Root of a mux tree: $procmux$80 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alu.
Performed a total of 0 changes.

3.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
Removed a total of 0 cells.

3.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..

3.10.15. Executing OPT_EXPR pass (perform const folding).

3.10.16. Finished OPT passes. (There is nothing left to do.)

3.11. Executing FSM pass (extract and optimize FSM).

3.11.1. Executing FSM_DETECT pass (finding FSMs in design).

3.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..

3.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.12. Executing OPT pass (performing simple optimizations).

3.12.1. Executing OPT_EXPR pass (perform const folding).

3.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
Removed a total of 0 cells.

3.12.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..

3.12.5. Finished fast OPT passes.

3.13. Executing MEMORY pass.

3.13.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

3.13.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..

3.13.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..

3.13.5. Executing MEMORY_COLLECT pass (generating $mem cells).

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..

3.15. Executing OPT pass (performing simple optimizations).

3.15.1. Executing OPT_EXPR pass (perform const folding).
Replacing $mux cell `$procmux$28' (mux_bool) in module `\alu' with constant driver `$7\alu_output[15:0] = $auto$rtlil.cc:1604:ReduceOr$109'.
Replacing $mux cell `$procmux$35' in module `alu' with inverter.
Replacing $mux cell `$procmux$43' (mux_bool) in module `\alu' with constant driver `$5\alu_output[15:0] = $auto$rtlil.cc:1604:ReduceOr$126'.
Replacing $mux cell `$procmux$52' in module `alu' with inverter.
Replacing $mux cell `$procmux$63' in module `alu' with inverter.
Replacing $mux cell `$procmux$75' (mux_bool) in module `\alu' with constant driver `$2\alu_output[15:0] = $auto$rtlil.cc:1603:ReduceAnd$107'.
Replacing $mux cell `$procmux$24' (mux_bool) in module `\alu' with constant driver `\zero_flag = $eq$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:64$16_Y'.

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
Removed a total of 0 cells.

3.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..

3.15.5. Finished fast OPT passes.

3.16. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

3.17. Executing OPT pass (performing simple optimizations).

3.17.1. Executing OPT_EXPR pass (perform const folding).

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
Removed a total of 0 cells.

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$80 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alu.
Performed a total of 0 changes.

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
Removed a total of 0 cells.

3.17.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..

3.17.8. Executing OPT_EXPR pass (perform const folding).

3.17.9. Finished OPT passes. (There is nothing left to do.)

3.18. Executing TECHMAP pass (map to technology primitives).

3.18.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.
Mapping alu.$xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5 ($xor) with simplemap.
Mapping alu.$or$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:24$6 ($or) with simplemap.
Mapping alu.$and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7 ($and) with simplemap.
Mapping alu.$eq$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:64$16 ($logic_not) with simplemap.

3.18.2. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 16
Parameter \B_WIDTH = 16
Parameter \Y_WIDTH = 16
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16'.

3.18.3. Continuing TECHMAP pass.
Mapping alu.$auto$alumacc.cc:470:replace_alu$137 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16.
Mapping alu.$auto$alumacc.cc:470:replace_alu$131 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16.
Mapping alu.$procmux$31_CMP0 ($eq) with simplemap.
Mapping alu.$auto$alumacc.cc:58:get_gt$110 ($or) with simplemap.
Mapping alu.$procmux$35 ($not) with simplemap.
Mapping alu.$procmux$38_CMP0 ($eq) with simplemap.
Mapping alu.$auto$alumacc.cc:58:get_gt$127 ($or) with simplemap.
Mapping alu.$procmux$46_CMP0 ($eq) with simplemap.
Mapping alu.$auto$alumacc.cc:502:replace_alu$125 ($reduce_or) with simplemap.
Mapping alu.$auto$alumacc.cc:502:replace_alu$108 ($reduce_or) with simplemap.
Mapping alu.$procmux$52 ($not) with simplemap.
Mapping alu.$procmux$55_CMP0 ($eq) with simplemap.
Mapping alu.$auto$alumacc.cc:64:get_eq$123 ($reduce_and) with simplemap.
Mapping alu.$procmux$63 ($not) with simplemap.
Mapping alu.$procmux$66_CMP0 ($eq) with simplemap.
Mapping alu.$auto$alumacc.cc:52:get_lt$121 ($xor) with simplemap.
Mapping alu.$procmux$78_CMP0 ($eq) with simplemap.
Mapping alu.$auto$alumacc.cc:87:get_of$119 ($xor) with simplemap.
Mapping alu.$auto$alumacc.cc:64:get_eq$106 ($reduce_and) with simplemap.

3.18.4. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 16
Parameter \S_WIDTH = 11
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=16\S_WIDTH=11'.

3.18.5. Continuing TECHMAP pass.
Mapping alu.$procmux$80 using $paramod\_90_pmux\WIDTH=16\S_WIDTH=11.
Mapping alu.$auto$alumacc.cc:470:replace_alu$101 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16.

3.18.6. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 1
Parameter \B_SIGNED = 1
Parameter \A_WIDTH = 16
Parameter \B_WIDTH = 16
Parameter \Y_WIDTH = 16
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16'.

3.18.7. Continuing TECHMAP pass.
Mapping alu.$auto$alumacc.cc:470:replace_alu$116 using $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16.
Mapping alu.$procmux$85_CMP0 ($eq) with simplemap.
Mapping alu.$auto$alumacc.cc:78:get_cf$104 ($not) with simplemap.
Mapping alu.$procmux$88_CMP0 ($eq) with simplemap.
Mapping alu.$procmux$89_CMP0 ($eq) with simplemap.
Mapping alu.$procmux$90_CMP0 ($eq) with simplemap.
Mapping alu.$procmux$91_CMP0 ($logic_not) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.$xor$<techmap.v>:262$255 ($xor) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.$xor$<techmap.v>:263$256 ($xor) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.$and$<techmap.v>:260$254 ($and) with simplemap.

3.18.8. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 16
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=16'.

3.18.9. Executing PROC pass (convert processes to netlists).

3.18.9.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.18.9.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.18.9.3. Executing PROC_INIT pass (extract init attributes).

3.18.9.4. Executing PROC_ARST pass (detect async resets in processes).

3.18.9.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$580'.
     1/32: $0\p[15:0] [14]
     2/32: $0\g[15:0] [14]
     3/32: $0\p[15:0] [12]
     4/32: $0\g[15:0] [12]
     5/32: $0\p[15:0] [10]
     6/32: $0\g[15:0] [10]
     7/32: $0\p[15:0] [8]
     8/32: $0\g[15:0] [8]
     9/32: $0\p[15:0] [6]
    10/32: $0\g[15:0] [6]
    11/32: $0\p[15:0] [4]
    12/32: $0\g[15:0] [4]
    13/32: $0\p[15:0] [2]
    14/32: $0\g[15:0] [2]
    15/32: $0\p[15:0] [13]
    16/32: $0\g[15:0] [13]
    17/32: $0\p[15:0] [9]
    18/32: $0\g[15:0] [9]
    19/32: $0\p[15:0] [5]
    20/32: $0\g[15:0] [5]
    21/32: $0\p[15:0] [11]
    22/32: $0\g[15:0] [11]
    23/32: $0\p[15:0] [15]
    24/32: $0\g[15:0] [15]
    25/32: $0\p[15:0] [7]
    26/32: $0\g[15:0] [7]
    27/32: $0\p[15:0] [3]
    28/32: $0\g[15:0] [3]
    29/32: $0\p[15:0] [1]
    30/32: $0\g[15:0] [1]
    31/32: $0\g[15:0] [0]
    32/32: $0\p[15:0] [0]

3.18.9.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=16.\g' from process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$580'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=16.\p' from process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$580'.

3.18.9.7. Executing PROC_DFF pass (convert process syncs to FFs).

3.18.9.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=16.$proc$<techmap.v>:207$580'.
Cleaned up 0 empty switches.

3.18.10. Executing OPT pass (performing simple optimizations).

3.18.10.1. Executing OPT_EXPR pass (perform const folding).

3.18.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=16'.
Removed a total of 0 cells.

3.18.10.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=16..
  removing unused `$and' cell `$and$<techmap.v>:222$585'.
  removing unused `$and' cell `$and$<techmap.v>:222$609'.
  removing unused `$and' cell `$and$<techmap.v>:222$621'.
  removing unused `$and' cell `$and$<techmap.v>:222$627'.
  removing unused `$and' cell `$and$<techmap.v>:230$630'.
  removing unused `$and' cell `$and$<techmap.v>:230$633'.
  removing unused `$and' cell `$and$<techmap.v>:230$636'.
  removing unused `$and' cell `$and$<techmap.v>:230$639'.
  removing unused `$and' cell `$and$<techmap.v>:230$642'.
  removing unused `$and' cell `$and$<techmap.v>:230$645'.
  removing unused `$and' cell `$and$<techmap.v>:230$648'.
  removing unused `$and' cell `$and$<techmap.v>:230$651'.
  removing unused `$and' cell `$and$<techmap.v>:230$654'.
  removing unused `$and' cell `$and$<techmap.v>:230$657'.
  removing unused `$and' cell `$and$<techmap.v>:230$660'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

3.18.10.5. Finished fast OPT passes.

3.18.11. Continuing TECHMAP pass.
Mapping alu.$auto$alumacc.cc:470:replace_alu$137.lcu using $paramod\_90_lcu\WIDTH=16.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253 ($mux) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252 ($not) with simplemap.
Mapping alu.$auto$alumacc.cc:470:replace_alu$137.B_conv ($pos) with simplemap.
Mapping alu.$auto$alumacc.cc:470:replace_alu$137.A_conv ($pos) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255 ($xor) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:263$256 ($xor) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254 ($and) with simplemap.
Mapping alu.$auto$alumacc.cc:470:replace_alu$131.lcu using $paramod\_90_lcu\WIDTH=16.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253 ($mux) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252 ($not) with simplemap.
Mapping alu.$auto$alumacc.cc:470:replace_alu$131.B_conv ($pos) with simplemap.
Mapping alu.$auto$alumacc.cc:470:replace_alu$131.A_conv ($pos) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$423 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$424 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$422 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$421 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$420 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$419 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$418 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$417 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$416 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$415 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$414 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$413 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$412 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$411 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$410 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:441$409 ($reduce_or) with simplemap.
Mapping alu.$techmap$procmux$80.$and$<techmap.v>:434$408 ($and) with simplemap.
Mapping alu.$techmap$procmux$80.$and$<techmap.v>:434$407 ($and) with simplemap.
Mapping alu.$techmap$procmux$80.$and$<techmap.v>:434$406 ($and) with simplemap.
Mapping alu.$techmap$procmux$80.$and$<techmap.v>:434$405 ($and) with simplemap.
Mapping alu.$techmap$procmux$80.$and$<techmap.v>:434$404 ($and) with simplemap.
Mapping alu.$techmap$procmux$80.$and$<techmap.v>:434$403 ($and) with simplemap.
Mapping alu.$techmap$procmux$80.$and$<techmap.v>:434$402 ($and) with simplemap.
Mapping alu.$techmap$procmux$80.$and$<techmap.v>:434$401 ($and) with simplemap.
Mapping alu.$techmap$procmux$80.$and$<techmap.v>:434$400 ($and) with simplemap.
Mapping alu.$techmap$procmux$80.$and$<techmap.v>:434$399 ($and) with simplemap.
Mapping alu.$techmap$procmux$80.$and$<techmap.v>:434$398 ($and) with simplemap.
Mapping alu.$techmap$procmux$80.$ternary$<techmap.v>:445$397 ($mux) with simplemap.
Mapping alu.$techmap$procmux$80.$reduce_or$<techmap.v>:445$396 ($reduce_or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255 ($xor) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256 ($xor) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254 ($and) with simplemap.
Mapping alu.$auto$alumacc.cc:470:replace_alu$101.lcu using $paramod\_90_lcu\WIDTH=16.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253 ($mux) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252 ($not) with simplemap.
Mapping alu.$auto$alumacc.cc:470:replace_alu$101.B_conv ($pos) with simplemap.
Mapping alu.$auto$alumacc.cc:470:replace_alu$101.A_conv ($pos) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428 ($xor) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429 ($xor) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427 ($and) with simplemap.
Mapping alu.$auto$alumacc.cc:470:replace_alu$116.lcu using $paramod\_90_lcu\WIDTH=16.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426 ($mux) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425 ($not) with simplemap.
Mapping alu.$auto$alumacc.cc:470:replace_alu$116.B_conv ($pos) with simplemap.
Mapping alu.$auto$alumacc.cc:470:replace_alu$116.A_conv ($pos) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:222$603 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:222$600 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:222$597 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:222$594 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:222$591 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:222$588 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:221$625 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:221$622 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:221$619 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:221$616 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:221$613 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:221$610 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:221$607 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:221$604 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:221$601 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:221$598 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:221$595 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:221$592 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:221$589 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:221$586 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:221$583 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:212$581 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:222$606 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:222$612 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:222$615 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:222$618 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:222$624 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:229$628 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:229$631 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:229$634 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:229$637 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:229$640 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:229$643 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:229$646 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:229$649 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:229$652 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:229$655 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:229$658 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:212$582 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:221$584 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:221$587 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:221$590 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:221$593 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:221$596 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:221$599 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:221$602 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:221$605 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:221$608 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:221$611 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:221$614 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:221$617 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:221$620 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:221$623 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:221$626 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:229$629 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:229$632 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:229$635 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:229$638 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:229$641 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:229$644 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:229$647 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:229$650 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:229$653 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:229$656 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$or$<techmap.v>:229$659 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:212$581 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$583 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$586 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$589 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$592 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$595 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$598 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$601 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$604 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$607 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$610 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$613 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$616 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$619 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$622 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:221$625 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:222$588 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:222$591 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:222$594 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:222$597 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:222$600 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:222$603 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:222$606 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:222$612 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:222$615 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:222$618 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:222$624 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:229$628 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:229$631 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:229$634 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:229$637 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:229$640 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:229$643 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:229$646 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:229$649 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:229$652 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:229$655 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:229$658 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:212$582 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$584 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$587 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$590 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$593 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$596 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$599 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$602 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$605 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$608 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$611 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$614 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$617 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$620 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$623 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:221$626 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:229$629 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:229$632 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:229$635 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:229$638 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:229$641 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:229$644 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:229$647 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:229$650 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:229$653 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:229$656 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$or$<techmap.v>:229$659 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:212$581 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$583 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$586 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$589 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$592 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$595 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$598 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$601 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$604 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$607 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$610 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$613 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$616 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$619 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$622 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$625 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$588 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$591 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$594 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$597 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$600 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$603 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$606 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$612 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$615 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$618 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$624 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$628 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$631 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$634 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$637 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$640 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$643 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$646 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$649 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$652 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$655 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$658 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:212$582 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$584 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$587 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$590 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$593 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$596 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$599 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$602 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$605 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$608 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$611 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$614 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$617 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$620 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$623 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$626 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:229$629 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:229$632 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:229$635 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:229$638 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:229$641 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:229$644 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:229$647 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:229$650 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:229$653 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:229$656 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:229$659 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:212$581 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$583 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$586 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$589 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$592 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$595 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$598 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$601 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$604 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$607 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$610 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$613 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$616 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$619 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$622 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$625 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$588 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$591 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$594 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$597 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$600 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$603 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$606 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$612 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$615 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$618 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$624 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$628 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$631 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$634 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$637 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$640 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$643 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$646 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$649 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$652 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$655 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$658 ($and) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:212$582 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$584 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$587 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$590 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$593 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$596 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$599 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$602 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$605 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$608 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$611 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$614 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$617 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$620 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$623 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$626 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:229$629 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:229$632 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:229$635 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:229$638 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:229$641 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:229$644 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:229$647 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:229$650 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:229$653 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:229$656 ($or) with simplemap.
Mapping alu.$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:229$659 ($or) with simplemap.
No more expansions possible.

3.19. Executing OPT pass (performing simple optimizations).

3.19.1. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$661' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$662' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$663' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$478' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$476 [0] = \op_code [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$479' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$476 [1] = \op_code [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$481' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$476 [3] = \op_code [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$463' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$461 [0] = \op_code [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$466' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$461 [3] = \op_code [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$742' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [0] = \a [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$709' (?0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:263$256_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1267' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [14] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1268' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [15] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1265' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [12] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1266' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [13] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1263' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [10] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1264' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [11] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1261' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [8] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1262' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [9] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1259' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [6] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1260' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [7] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1257' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1258' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [5] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1255' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1256' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1253' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1254' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$ternary$<techmap.v>:258$253_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1496' (?1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:212$581_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$276' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$274 [0] = \op_code [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1348' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [14] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1349' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [15] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1346' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [12] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1347' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [13] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1344' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [10] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1345' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [11] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1342' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [8] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1343' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [9] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1340' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [6] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1341' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [7] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1338' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1339' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [5] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1336' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1337' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1334' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1335' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$ternary$<techmap.v>:258$426_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1561' (?1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:212$581_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$312' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$310 [0] = \op_code [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$313' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$310 [1] = \op_code [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$293' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$290 [1] = \op_code [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$348' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$345 [1] = \op_code [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$349' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$345 [2] = \op_code [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$432' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$430 [0] = \op_code [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$434' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$430 [2] = \op_code [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$451' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$446 [3] = \op_code [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$363' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$361 [0] = \op_code [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$364' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$361 [1] = \op_code [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$365' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$361 [2] = \op_code [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$743' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [1] = \a [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1431' (const_and) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.lcu.$and$<techmap.v>:212$581_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1469' (?0) in module `\alu' with constant driver `$auto$alumacc.cc:484:replace_alu$133 [0] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1143' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$399_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1159' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$398_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$971' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$970 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1111' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$401_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1127' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$400_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$972' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$970 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$977' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$976 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1079' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$403_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1387' (?1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.lcu.$and$<techmap.v>:212$581_Y = $techmap$auto$alumacc.cc:470:replace_alu$137.$xor$<techmap.v>:262$255_Y [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$973' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$970 [2] = $techmap$procmux$80.$and$<techmap.v>:434$402_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1063' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$404_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$974' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$970 [3] = $techmap$procmux$80.$and$<techmap.v>:434$405_Y [1]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$981' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$980 = $auto$simplemap.cc:127:simplemap_reduce$976 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$744' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [2] = \a [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1144' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$399_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1160' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$398_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$957' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$956 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1112' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$401_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1128' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$400_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$958' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$956 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$963' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$962 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1080' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$403_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$959' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$956 [2] = $techmap$procmux$80.$and$<techmap.v>:434$402_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1064' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$404_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$960' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$956 [3] = $techmap$procmux$80.$and$<techmap.v>:434$405_Y [2]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$967' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$966 = $auto$simplemap.cc:127:simplemap_reduce$962 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$745' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [3] = \a [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1145' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$399_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1161' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$398_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$943' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$942 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1113' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$401_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1129' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$400_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$944' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$942 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$949' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$948 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1081' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$403_Y [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$664' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$945' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$942 [2] = $techmap$procmux$80.$and$<techmap.v>:434$402_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1065' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$404_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$946' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$942 [3] = $techmap$procmux$80.$and$<techmap.v>:434$405_Y [3]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$953' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$952 = $auto$simplemap.cc:127:simplemap_reduce$948 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$746' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [4] = \a [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1146' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$399_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1162' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$398_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$929' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$928 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1114' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$401_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1130' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$400_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$930' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$928 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$935' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$934 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1082' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$403_Y [4] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$665' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [4]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$931' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$928 [2] = $techmap$procmux$80.$and$<techmap.v>:434$402_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1066' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$404_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$932' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$928 [3] = $techmap$procmux$80.$and$<techmap.v>:434$405_Y [4]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$939' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$938 = $auto$simplemap.cc:127:simplemap_reduce$934 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$747' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [5] = \a [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1147' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$399_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1163' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$398_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$915' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$914 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1115' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$401_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1131' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$400_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$916' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$914 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$921' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$920 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1083' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$403_Y [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$666' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [5] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [5]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$917' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$914 [2] = $techmap$procmux$80.$and$<techmap.v>:434$402_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1067' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$404_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$918' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$914 [3] = $techmap$procmux$80.$and$<techmap.v>:434$405_Y [5]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$925' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$924 = $auto$simplemap.cc:127:simplemap_reduce$920 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$748' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [6] = \a [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1148' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$399_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1164' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$398_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$901' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$900 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1116' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$401_Y [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1132' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$400_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$902' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$900 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$907' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$906 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1084' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$403_Y [6] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$667' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [6] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [6]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$903' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$900 [2] = $techmap$procmux$80.$and$<techmap.v>:434$402_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1068' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$404_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$904' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$900 [3] = $techmap$procmux$80.$and$<techmap.v>:434$405_Y [6]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$911' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$910 = $auto$simplemap.cc:127:simplemap_reduce$906 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$749' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [7] = \a [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1149' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$399_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1165' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$398_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$887' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$886 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1117' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$401_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1133' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$400_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$888' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$886 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$893' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$892 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1085' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$403_Y [7] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$668' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [7] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$889' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$886 [2] = $techmap$procmux$80.$and$<techmap.v>:434$402_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1069' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$404_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$890' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$886 [3] = $techmap$procmux$80.$and$<techmap.v>:434$405_Y [7]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$897' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$896 = $auto$simplemap.cc:127:simplemap_reduce$892 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$750' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [8] = \a [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1150' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$399_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1166' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$398_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$873' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$872 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1118' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$401_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1134' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$400_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$874' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$872 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$879' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$878 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1086' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$403_Y [8] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$669' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [8] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [8]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$875' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$872 [2] = $techmap$procmux$80.$and$<techmap.v>:434$402_Y [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1070' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$404_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$876' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$872 [3] = $techmap$procmux$80.$and$<techmap.v>:434$405_Y [8]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$883' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$882 = $auto$simplemap.cc:127:simplemap_reduce$878 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$751' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [9] = \a [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1151' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$399_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1167' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$398_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$859' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$858 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1119' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$401_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1135' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$400_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$860' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$858 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$865' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$864 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1087' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$403_Y [9] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$670' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [9] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [9]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$861' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$858 [2] = $techmap$procmux$80.$and$<techmap.v>:434$402_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1071' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$404_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$862' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$858 [3] = $techmap$procmux$80.$and$<techmap.v>:434$405_Y [9]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$869' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$868 = $auto$simplemap.cc:127:simplemap_reduce$864 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$752' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [10] = \a [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1152' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$399_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1168' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$398_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$845' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$844 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1120' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$401_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1136' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$400_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$846' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$844 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$851' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$850 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1088' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$403_Y [10] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$671' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [10] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [10]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$847' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$844 [2] = $techmap$procmux$80.$and$<techmap.v>:434$402_Y [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1072' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$404_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$848' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$844 [3] = $techmap$procmux$80.$and$<techmap.v>:434$405_Y [10]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$855' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$854 = $auto$simplemap.cc:127:simplemap_reduce$850 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$753' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [11] = \a [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1153' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$399_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1169' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$398_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$831' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$830 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1121' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$401_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1137' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$400_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$832' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$830 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$837' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$836 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1089' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$403_Y [11] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$672' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [11] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [11]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$833' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$830 [2] = $techmap$procmux$80.$and$<techmap.v>:434$402_Y [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1073' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$404_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$834' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$830 [3] = $techmap$procmux$80.$and$<techmap.v>:434$405_Y [11]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$841' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$840 = $auto$simplemap.cc:127:simplemap_reduce$836 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$754' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [12] = \a [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1154' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$399_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1170' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$398_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$817' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$816 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1122' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$401_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1138' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$400_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$818' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$816 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$823' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$822 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1090' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$403_Y [12] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$673' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [12] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [12]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$819' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$816 [2] = $techmap$procmux$80.$and$<techmap.v>:434$402_Y [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1074' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$404_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$820' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$816 [3] = $techmap$procmux$80.$and$<techmap.v>:434$405_Y [12]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$827' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$826 = $auto$simplemap.cc:127:simplemap_reduce$822 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$755' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [13] = \a [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1155' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$399_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1171' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$398_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$803' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$802 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1123' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$401_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1139' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$400_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$804' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$802 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$809' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$808 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1091' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$403_Y [13] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$674' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [13] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [13]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$805' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$802 [2] = $techmap$procmux$80.$and$<techmap.v>:434$402_Y [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1075' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$404_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$806' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$802 [3] = $techmap$procmux$80.$and$<techmap.v>:434$405_Y [13]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$813' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$812 = $auto$simplemap.cc:127:simplemap_reduce$808 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$756' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [14] = \a [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1156' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$399_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1172' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$398_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$775' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$774 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1124' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$401_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1140' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$400_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$776' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$774 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$781' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$780 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1092' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$403_Y [14] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$675' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [14] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [14]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$777' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$774 [2] = $techmap$procmux$80.$and$<techmap.v>:434$402_Y [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1076' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$404_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$778' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$774 [3] = $techmap$procmux$80.$and$<techmap.v>:434$405_Y [14]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$785' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$784 = $auto$simplemap.cc:127:simplemap_reduce$780 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$757' (??0) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$ternary$<techmap.v>:258$253_Y [15] = \a [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1157' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$399_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1173' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$398_Y [15] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$789' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$788 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1125' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$401_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1141' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$400_Y [15] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$790' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$788 [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$795' (00) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$794 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1093' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$403_Y [15] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$676' (??1) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$ternary$<techmap.v>:258$253_Y [15] = $techmap$auto$alumacc.cc:470:replace_alu$137.$not$<techmap.v>:258$252_Y [15]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$791' (?0) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$788 [2] = $techmap$procmux$80.$and$<techmap.v>:434$402_Y [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1077' (const_and) in module `\alu' with constant driver `$techmap$procmux$80.$and$<techmap.v>:434$404_Y [15] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$792' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$788 [3] = $techmap$procmux$80.$and$<techmap.v>:434$405_Y [15]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$799' (0?) in module `\alu' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$798 = $auto$simplemap.cc:127:simplemap_reduce$794 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$529' (0?) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$137.$xor$<techmap.v>:263$256_Y [16] = $auto$alumacc.cc:484:replace_alu$139 [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$725' (0?) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:263$256_Y [16] = $auto$alumacc.cc:484:replace_alu$133 [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1236' (0?) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [16] = $auto$alumacc.cc:484:replace_alu$103 [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1317' (0?) in module `\alu' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [16] = $auto$alumacc.cc:484:replace_alu$118 [15]'.

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1352' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1271'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [2]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1352' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$770' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1281'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [12] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [12]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$770' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$769' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1280'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [11] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [11]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$769' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$768' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1279'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [10] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [10]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$768' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$766' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1277'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [8] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [8]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$766' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$765' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1276'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [7] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [7]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$765' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$764' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1275'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [6] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [6]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$764' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$763' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1274'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [5] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [5]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$763' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$762' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1273'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [4]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$762' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$761' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1272'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [3]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$761' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$760' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1271'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [2]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$760' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$759' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1270'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [1]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$759' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$758' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1350'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [0]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$758' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1278' is identical to cell `$auto$simplemap.cc:37:simplemap_not$767'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [9] = $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [9]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1278' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1354' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1273'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [4]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1354' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1353' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1272'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [3]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1353' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1269' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1350'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [0]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1269' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1360' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1279'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [10] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [10]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1360' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1361' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1280'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [11] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [11]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1361' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1362' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1281'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [12] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [12]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1362' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$485' is identical to cell `$auto$simplemap.cc:177:logic_reduce$492'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$484 [0] = $auto$simplemap.cc:168:logic_reduce$491 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$485' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1358' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1277'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [8] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [8]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1358' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1359' is identical to cell `$auto$simplemap.cc:37:simplemap_not$767'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [9] = $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [9]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1359' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1357' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1276'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [7] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [7]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1357' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$465' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$480'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$461 [2] = $auto$simplemap.cc:250:simplemap_eqne$476 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$465' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1356' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1275'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [6] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [6]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1356' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1355' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1274'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [5] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [5]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1355' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$450' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$480'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$446 [2] = $auto$simplemap.cc:250:simplemap_eqne$476 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$450' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$449' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$464'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$446 [1] = $auto$simplemap.cc:250:simplemap_eqne$461 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$449' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$433' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$464'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$430 [1] = $auto$simplemap.cc:250:simplemap_eqne$461 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$433' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1283' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1364'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [14] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [14]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1283' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1284' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1365'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [15] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [15]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1284' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1351' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1270'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [1]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1351' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1252' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1333'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [15] = $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [15]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1252' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1219' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1300'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [15] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [15]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1219' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1218' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1299'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [14] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1218' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$384' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1512'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$377 [6] = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$588_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$384' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$383' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1513'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$377 [5] = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$591_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$383' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$382' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1514'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$377 [4] = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$594_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$382' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$381' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1515'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$377 [3] = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$597_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$381' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$380' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1516'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$377 [2] = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$600_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$380' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$379' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1517'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$377 [1] = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$603_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$379' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$378' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1583'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$377 [0] = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$606_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$378' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$370' is identical to cell `$auto$simplemap.cc:177:logic_reduce$492'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$369 [0] = $auto$simplemap.cc:168:logic_reduce$491 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$370' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$366' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$435'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$361 [3] = $auto$simplemap.cc:250:simplemap_eqne$430 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$366' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$347' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$448'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$345 [0] = $auto$simplemap.cc:250:simplemap_eqne$446 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$347' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$350' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$435'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$345 [3] = $auto$simplemap.cc:250:simplemap_eqne$430 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$350' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$332' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1577'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$325 [6] = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$588_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$332' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$331' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1578'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$325 [5] = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$591_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$331' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$330' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1579'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$325 [4] = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$594_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$330' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$329' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1580'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$325 [3] = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$597_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$329' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$328' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1581'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$325 [2] = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$600_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$328' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$327' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1582'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$325 [1] = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$603_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$327' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$326' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1583'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$325 [0] = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$606_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$326' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$319' is identical to cell `$auto$simplemap.cc:177:logic_reduce$492'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$318 [0] = $auto$simplemap.cc:168:logic_reduce$491 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$319' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$314' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$480'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$310 [2] = $auto$simplemap.cc:250:simplemap_eqne$476 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$314' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$315' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$435'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$310 [3] = $auto$simplemap.cc:250:simplemap_eqne$430 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$315' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$294' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$480'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$290 [2] = $auto$simplemap.cc:250:simplemap_eqne$476 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$294' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$292' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$448'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$290 [0] = $auto$simplemap.cc:250:simplemap_eqne$446 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$292' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$295' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$435'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$290 [3] = $auto$simplemap.cc:250:simplemap_eqne$430 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$295' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$278' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$480'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$274 [2] = $auto$simplemap.cc:250:simplemap_eqne$476 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$278' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$277' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$464'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$274 [1] = $auto$simplemap.cc:250:simplemap_eqne$461 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$277' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$279' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$435'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$274 [3] = $auto$simplemap.cc:250:simplemap_eqne$430 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$279' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$261' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$480'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$257 [2] = $auto$simplemap.cc:250:simplemap_eqne$476 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$261' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$260' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$464'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$257 [1] = $auto$simplemap.cc:250:simplemap_eqne$461 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$260' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$259' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$448'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$257 [0] = $auto$simplemap.cc:250:simplemap_eqne$446 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$259' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$262' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$435'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$257 [3] = $auto$simplemap.cc:250:simplemap_eqne$430 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$262' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$772' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1364'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [14] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [14]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$772' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$773' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1365'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [15] = $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [15]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$773' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$230' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$740'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [14] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [14]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$230' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$229' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$739'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [13] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [13]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$229' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$228' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$738'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [12] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [12]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$228' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$227' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$737'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [11] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [11]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$227' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$226' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$736'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [10] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [10]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$226' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$225' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$735'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [9] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$225' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$224' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$734'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [8] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [8]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$224' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$223' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$733'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [7] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [7]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$223' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$222' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$732'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [6] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [6]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$222' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$221' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$731'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [5] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [5]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$221' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$220' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$730'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [4]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$220' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$219' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$729'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$219' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$218' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$728'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [2]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$218' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$217' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$727'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [1]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$217' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$216' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$726'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [0]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$216' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$198' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$707'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [14] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$198' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$197' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$706'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [13] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [13]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$197' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$196' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$705'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [12] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [12]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$196' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$195' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$704'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [11] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$195' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$194' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$703'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [10] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$194' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$193' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$702'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [9] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [9]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$193' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$192' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$701'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [8] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [8]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$192' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$191' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$700'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [7] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [7]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$191' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$190' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$699'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [6] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$190' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$189' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$698'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [5] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$189' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$188' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$697'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$188' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$187' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$696'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$187' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$186' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$695'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$186' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$185' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$694'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$185' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$184' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$693'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$184' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$231' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$741'.
    Redirecting output \Y: $and$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:26$7_Y [15] = $techmap$auto$alumacc.cc:470:replace_alu$131.$and$<techmap.v>:260$254_Y [15]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$231' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$1363' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1282'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$not$<techmap.v>:258$425_Y [13] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [13]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1363' from module `\alu'.
  Cell `$auto$simplemap.cc:37:simplemap_not$771' is identical to cell `$auto$simplemap.cc:37:simplemap_not$1282'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$131.$not$<techmap.v>:258$252_Y [13] = $techmap$auto$alumacc.cc:470:replace_alu$101.$not$<techmap.v>:258$252_Y [13]
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$771' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$272' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$308'.
    Redirecting output \Y: $auto$rtlil.cc:1630:Or$111 = $7\alu_output[15:0]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$272' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$289' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$306'.
    Redirecting output \Y: $auto$rtlil.cc:1630:Or$128 = $5\alu_output[15:0]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$289' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$199' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$708'.
    Redirecting output \Y: $xor$/home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/source/task_1_alu.v:22$5_Y [15] = $techmap$auto$alumacc.cc:470:replace_alu$131.$xor$<techmap.v>:262$255_Y [15]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$199' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1326' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1245'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [8] = $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [8]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1326' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1329' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1248'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [11] = $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [11]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1329' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1208' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1289'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1208' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1518' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1583'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$606_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$606_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1518' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1246' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1327'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [9] = $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1246' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1250' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1331'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [13] = $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [13]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1250' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1216' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1297'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [12] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [12]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1216' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1207' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1288'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1207' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1206' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1287'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1206' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1204' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1285'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1204' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1295' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1214'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [10] = $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1295' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1325' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1244'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [7] = $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [7]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1325' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1247' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1328'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [10] = $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [10]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1247' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1286' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1205'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1286' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1330' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1249'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [12] = $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [12]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1330' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$471' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$486'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$469 [1] = $auto$simplemap.cc:127:simplemap_reduce$484 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$471' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$456' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$486'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$454 [1] = $auto$simplemap.cc:127:simplemap_reduce$484 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$456' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$439' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$470'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$438 [0] = $auto$simplemap.cc:127:simplemap_reduce$469 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$439' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1512' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1577'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$588_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$588_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1512' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1215' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1296'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [11] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1215' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$389' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1519'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$386 [2] = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$612_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$389' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$388' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1520'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$386 [1] = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$615_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$388' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1323' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1242'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [5] = $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [5]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1323' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$371' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$440'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$369 [1] = $auto$simplemap.cc:127:simplemap_reduce$438 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$371' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1241' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1322'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [4]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1241' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$355' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$440'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$353 [1] = $auto$simplemap.cc:127:simplemap_reduce$438 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$355' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$337' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1584'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$334 [2] = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$612_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$337' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$336' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1585'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$334 [1] = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$615_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$336' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$335' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1586'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$334 [0] = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$618_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$335' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$333' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$385'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$325 [7] = $auto$simplemap.cc:127:simplemap_reduce$377 [7]
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$333' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1294' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1213'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [9] = $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [9]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1294' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1324' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1243'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [6] = $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [6]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1324' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1566' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1501'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$595_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$595_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1566' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$300' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$320'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$298 [1] = $auto$simplemap.cc:127:simplemap_reduce$318 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$300' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$299' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$354'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$298 [0] = $auto$simplemap.cc:127:simplemap_reduce$353 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$299' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1237' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1318'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [0]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1237' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$284' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$320'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$282 [1] = $auto$simplemap.cc:127:simplemap_reduce$318 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$284' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$283' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$470'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$282 [0] = $auto$simplemap.cc:127:simplemap_reduce$469 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$283' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1251' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1332'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [14] = $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [14]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1251' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$267' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$320'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$265 [1] = $auto$simplemap.cc:127:simplemap_reduce$318 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$267' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$266' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$455'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$265 [0] = $auto$simplemap.cc:127:simplemap_reduce$454 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$266' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1290' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1209'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [5] = $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1290' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1211' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1292'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [7] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [7]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1211' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1217' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1298'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [13] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [13]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1217' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1212' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1293'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [8] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [8]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1212' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1320' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1239'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [2]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1320' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1238' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1319'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [1]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1238' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1291' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1210'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:262$428_Y [6] = $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:262$255_Y [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1291' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1321' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1240'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$and$<techmap.v>:260$427_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$101.$and$<techmap.v>:260$254_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1321' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1563' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1498'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$586_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$586_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1563' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1516' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1581'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$600_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$600_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1516' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1504' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1569'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$604_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$604_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1504' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1567' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1502'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$598_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$598_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1567' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1580' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1515'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$597_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$597_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1580' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1301' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1220'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1301' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1503' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1568'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$601_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$601_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1503' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1517' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1582'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$603_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$603_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1517' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1601' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1536'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$587_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$587_Y
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1601' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$387' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1586'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$386 [0] = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$618_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$387' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1565' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1500'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$592_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$592_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1565' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1599' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1534'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$118 [0] = $auto$alumacc.cc:484:replace_alu$103 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1599' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1604' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1539'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$596_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$596_Y
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1604' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1499' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1564'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$589_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$589_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1499' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1513' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1578'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$591_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$591_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1513' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$340' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1587'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$339 [0] = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$624_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$340' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$338' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$390'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$334 [3] = $auto$simplemap.cc:127:simplemap_reduce$386 [3]
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$338' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1606' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1541'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$602_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$602_Y
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1606' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1607' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1542'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$605_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$605_Y
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1607' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1579' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1514'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$594_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$594_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1579' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1605' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1540'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$599_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$599_Y
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1605' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1537' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1602'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$590_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$590_Y
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1537' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1562' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1497'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$583_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$583_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1562' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1538' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1603'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$593_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$593_Y
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1538' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1506' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1571'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$610_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$610_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1506' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1508' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1573'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$616_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$616_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1508' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1302' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1221'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [1] = $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1302' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1572' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1507'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$613_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$613_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1572' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1586' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1521'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$618_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$618_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1586' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1519' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1584'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$612_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$612_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1519' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1585' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1520'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$615_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$615_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1585' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1600' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1535'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$118 [1] = $auto$alumacc.cc:484:replace_alu$103 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1600' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$392' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1522'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$391 [0] = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$624_Y
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$392' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$341' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$393'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$339 [1] = $auto$simplemap.cc:127:simplemap_reduce$391 [1]
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$341' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1570' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1505'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$607_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$607_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1570' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1527' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1592'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$640_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$640_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1527' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1610' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1545'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$614_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$614_Y
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1610' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1609' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1544'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$611_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$611_Y
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1609' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1510' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1575'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$622_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$622_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1510' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1543' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1608'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$103 [3] = $auto$alumacc.cc:484:replace_alu$118 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1543' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1546' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1611'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$617_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$617_Y
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1546' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1522' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1587'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:222$624_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:222$624_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1522' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1613' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1548'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$or$<techmap.v>:221$623_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$or$<techmap.v>:221$623_Y
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1613' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1222' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1303'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [2] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1222' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1619' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1554'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$118 [2] = $auto$alumacc.cc:484:replace_alu$103 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1619' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1593' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1528'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$643_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$643_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1593' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1509' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1574'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$619_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$619_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1509' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1305' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1224'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [4] = $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1305' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1524' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1589'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$631_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$631_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1524' from module `\alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$343' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$395'.
    Redirecting output \Y: $auto$rtlil.cc:1603:ReduceAnd$124 = $2\alu_output[15:0]
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$343' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1612' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1547'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$118 [7] = $auto$alumacc.cc:484:replace_alu$103 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1612' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1223' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1304'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [3] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1223' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1620' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1555'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$118 [4] = $auto$alumacc.cc:484:replace_alu$103 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1620' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1309' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1228'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [8] = $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [8]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1309' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1616' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1551'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$118 [5] = $auto$alumacc.cc:484:replace_alu$103 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1616' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1306' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1225'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [5] = $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1306' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1576' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1511'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:221$625_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:221$625_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1576' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1590' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1525'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$634_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$634_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1590' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1549' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1614'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$103 [15] = $auto$alumacc.cc:484:replace_alu$118 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1549' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1594' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1529'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$646_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$646_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1594' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1595' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1530'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$649_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$649_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1595' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1226' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1307'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [6] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1226' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1617' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1552'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$118 [9] = $auto$alumacc.cc:484:replace_alu$103 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1617' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1588' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1523'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$628_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$628_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1588' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1557' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1622'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$103 [8] = $auto$alumacc.cc:484:replace_alu$118 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1557' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1550' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1615'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$103 [11] = $auto$alumacc.cc:484:replace_alu$118 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1550' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1621' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1556'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$118 [6] = $auto$alumacc.cc:484:replace_alu$103 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1621' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1310' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1229'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [9] = $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [9]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1310' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1230' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1311'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [10] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1230' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1531' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1596'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$652_Y = $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$652_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1531' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1597' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1532'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$655_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$655_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1597' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1313' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1232'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [12] = $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [12]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1313' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1227' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1308'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [7] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [7]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1227' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1591' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1526'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$637_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$637_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1591' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1553' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1618'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$103 [13] = $auto$alumacc.cc:484:replace_alu$118 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1553' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1315' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1234'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [14] = $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [14]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1315' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1623' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1558'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$118 [10] = $auto$alumacc.cc:484:replace_alu$103 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1623' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1624' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1559'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$118 [12] = $auto$alumacc.cc:484:replace_alu$103 [12]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1624' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1598' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1533'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.lcu.$and$<techmap.v>:229$658_Y = $techmap$auto$alumacc.cc:470:replace_alu$101.lcu.$and$<techmap.v>:229$658_Y
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1598' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1231' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1312'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [11] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1231' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1560' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1625'.
    Redirecting output \Y: $auto$alumacc.cc:484:replace_alu$103 [14] = $auto$alumacc.cc:484:replace_alu$118 [14]
    Removing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1560' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1233' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1314'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [13] = $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [13]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1233' from module `\alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1316' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1235'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$116.$xor$<techmap.v>:263$429_Y [15] = $techmap$auto$alumacc.cc:470:replace_alu$101.$xor$<techmap.v>:263$256_Y [15]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1316' from module `\alu'.
Removed a total of 237 cells.

3.19.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.19.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$545'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1220'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1221'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1224'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1225'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1228'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1229'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1232'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1234'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1303'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1304'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1307'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1308'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1311'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1312'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1314'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1372'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1373'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1375'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1379'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1388'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1391'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1392'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1412'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1416'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1418'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1419'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1439'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1443'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1445'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1446'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1453'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1456'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1457'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1477'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1481'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1483'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1484'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1525'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1528'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1529'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1530'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1532'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1551'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1552'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1554'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1555'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1556'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1558'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1559'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1589'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1592'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1596'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1622'.

3.19.5. Finished fast OPT passes.

3.20. Executing ABC pass (technology mapping using ABC).

3.20.1. Extracting gate netlist of module `\alu' to `<abc-temp-dir>/input.blif'..
Extracted 572 gates and 610 wires to a netlist network with 36 inputs and 18 outputs.

3.20.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

3.20.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       91
ABC RESULTS:              AOI3 cells:       55
ABC RESULTS:              AOI4 cells:       10
ABC RESULTS:              NAND cells:       27
ABC RESULTS:               NOR cells:       54
ABC RESULTS:               NOT cells:       60
ABC RESULTS:              OAI3 cells:       50
ABC RESULTS:              OAI4 cells:        7
ABC RESULTS:                OR cells:       60
ABC RESULTS:              XNOR cells:       10
ABC RESULTS:               XOR cells:       25
ABC RESULTS:        internal signals:      556
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       18
Removing temp directory.

3.21. Executing OPT pass (performing simple optimizations).

3.21.1. Executing OPT_EXPR pass (perform const folding).

3.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
Removed a total of 0 cells.

3.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..

3.21.5. Finished fast OPT passes.

3.22. Executing HIERARCHY pass (managing design hierarchy).

3.22.1. Analyzing design hierarchy..
Top module:  \alu

3.22.2. Analyzing design hierarchy..
Top module:  \alu
Removed 0 unused modules.

3.23. Printing statistics.

=== alu ===

   Number of wires:                437
   Number of wire bits:            485
   Number of public wires:           6
   Number of public wire bits:      54
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                449
     $_AND_                         91
     $_AOI3_                        55
     $_AOI4_                        10
     $_NAND_                        27
     $_NOR_                         54
     $_NOT_                         60
     $_OAI3_                        50
     $_OAI4_                         7
     $_OR_                          60
     $_XNOR_                        10
     $_XOR_                         25

3.24. Executing CHECK pass (checking for obvious problems).
checking module alu..
found and reported 0 problems.

4. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=704.00) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\alu':

5. Executing OPT pass (performing simple optimizations).

5.1. Executing OPT_EXPR pass (perform const folding).

5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
Removed a total of 0 cells.

5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alu.
Performed a total of 0 changes.

5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
Removed a total of 0 cells.

5.6. Executing OPT_RMDFF pass (remove dff with constant values).

5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..

5.8. Executing OPT_EXPR pass (perform const folding).

5.9. Finished OPT passes. (There is nothing left to do.)

6. Executing ABC pass (technology mapping using ABC).

6.1. Extracting gate netlist of module `\alu' to `<abc-temp-dir>/input.blif'..
Extracted 449 gates and 485 wires to a netlist network with 36 inputs and 18 outputs.

6.1.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/local/share/qflow/tech/osu035/osu035_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/usr/local/share/qflow/tech/osu035/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.1.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:       22
ABC RESULTS:           AOI21X1 cells:       62
ABC RESULTS:           AOI22X1 cells:        8
ABC RESULTS:             INVX1 cells:       77
ABC RESULTS:           NAND2X1 cells:       78
ABC RESULTS:           NAND3X1 cells:       44
ABC RESULTS:            NOR2X1 cells:       86
ABC RESULTS:            NOR3X1 cells:        7
ABC RESULTS:           OAI21X1 cells:       83
ABC RESULTS:           OAI22X1 cells:       21
ABC RESULTS:             OR2X2 cells:       11
ABC RESULTS:           XNOR2X1 cells:        1
ABC RESULTS:            XOR2X1 cells:        1
ABC RESULTS:        internal signals:      431
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       18
Removing temp directory.

7. Executing FLATTEN pass (flatten design).
No more expansions possible.
Removed 0 unused cells and 485 unused wires.

8. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map input port alu.a: Missing option -inpad.
Mapping port alu.alu_output using BUFX2.
Don't map input port alu.b: Missing option -inpad.
Mapping port alu.carryout using BUFX2.
Don't map input port alu.op_code: Missing option -inpad.
Mapping port alu.zero_flag using BUFX2.

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
Removed a total of 0 cells.

9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alu.
Performed a total of 0 changes.

9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
Removed a total of 0 cells.

9.6. Executing OPT_RMDFF pass (remove dff with constant values).

9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..

9.8. Executing OPT_EXPR pass (perform const folding).

9.9. Finished OPT passes. (There is nothing left to do.)

10. Executing Verilog backend.
Dumping module `\alu'.

11. Printing statistics.

=== alu ===

   Number of wires:                492
   Number of wire bits:            555
   Number of public wires:         492
   Number of public wire bits:     555
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                519
     AND2X2                         22
     AOI21X1                        62
     AOI22X1                         8
     BUFX2                          18
     INVX1                          77
     NAND2X1                        78
     NAND3X1                        44
     NOR2X1                         86
     NOR3X1                          7
     OAI21X1                        83
     OAI22X1                        21
     OR2X2                          11
     XNOR2X1                         1
     XOR2X1                          1

End of script. Logfile hash: 7e2573cf64
CPU: user 1.01s system 0.03s, MEM: 40.72 MB total, 13.59 MB resident
Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)
Time spent: 30% 17x opt_merge (0 sec), 12% 18x opt_expr (0 sec), ...
Running getpowerground to determine power and ground net names.
getpowerground.tcl  /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef
Running vlogFanout
vlogFanout -l 200 -c 30 -I alu_nofanout -s nullstring -p /usr/local/share/qflow/tech/osu035/osu035_stdcells.lib -b BUFX2,CLKBUF1 -i A,A -o Y,Y alu_mapped.v alu_sized.v

vlogFanout for qflow 1.4.79
Parsing library "osu035_stdcells"
End of library at line 6636
Lib Read:  Processed 6637 lines.
Top internal fanout is 13 (load 387.568) from node _178_,
driven by NAND3X1 with strength 101.345 (fF driven at latency 200)
Top fanout load-to-strength ratio is 3.58989 (latency = 717.978 ps)
Top input node fanout is 8 (load 160.648) from node b[1].
0 gates exceed specified minimum load.
0 buffers were added.
Warning 1: load of 216.696 is 1.98255 times greater than strongest gate XOR2X1
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 9: load of 276.021 is 2.52565 times greater than strongest gate XNOR2X1
Warning 34: load of 274.074 is 2.6809 times greater than strongest gate NAND2X1
Warning 35: load of 373.817 is 3.68856 times greater than strongest gate NAND3X1
9 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 468    	Out: 459    	-9
	"2" gates	In: 51    	Out: 59    	+8

49 gates exceed specified minimum load.
0 buffers were added.
0 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 468    	Out: 459    	-9
	"2" gates	In: 51    	Out: 59    	+8

Number of gates changed: 0
Running vlog2Verilog for antenna cell mapping.
vlog2Verilog -c -p -v vdd -g gnd  -l /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef 
   -o alu.v alu_sized.v

Generating RTL verilog and SPICE netlist file in directory
	 /home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/synthesis
Files:
   Verilog: /home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/synthesis/alu.rtl.v
   Verilog: /home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/synthesis/alu.rtlnopwr.v
   Verilog: /home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/synthesis/alu.rtlbb.v
   Spice:   /home/akash/Documents/DigitalLab/verilog_tasks/task_1_alu/synthesis/alu.spc

Running vlog2Verilog.
vlog2Verilog -c -v vdd -g gnd  -l /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef 
	-o alu.rtl.v
   alu.v
vlog2Verilog -c -p -v vdd -g gnd  -l /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef 
	-o alu.rtlnopwr.v
   alu.v
/usr/local/share/qflow/bin/vlog2Verilog -c -p -b -n -v vdd -g gnd  -l /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef
   -o alu.rtlbb.v
Running vlog2Spice.
vlog2Spice -i -l  /usr/local/share/qflow/tech/osu035/osu035_stdcells.sp -o alu.spc alu.rtl.v
Running spi2xspice.py
spi2xspice.py "/usr/local/share/qflow/tech/osu035/osu035_stdcells.lib" alu.spc alu.xspice

Synthesis script ended on Fr 15. Mai 15:24:44 CEST 2020
