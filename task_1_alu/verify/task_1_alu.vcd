$date
	Sun May 10 18:38:42 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 1 ! zero_flag $end
$var wire 1 " carryout $end
$var wire 16 # alu_output [15:0] $end
$var reg 16 $ a [15:0] $end
$var reg 16 % b [15:0] $end
$var reg 4 & op_code [3:0] $end
$var integer 32 ' i [31:0] $end
$scope module test_unit $end
$var wire 16 ( a [15:0] $end
$var wire 16 ) alu_output [15:0] $end
$var wire 16 * b [15:0] $end
$var wire 4 + op_code [3:0] $end
$var wire 17 , tmp [16:0] $end
$var wire 1 " carryout $end
$var reg 16 - alu_result [15:0] $end
$var reg 1 ! zero_flag $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 -
b1001 ,
b1 +
b100 *
b0 )
b101 (
b0 '
b1 &
b100 %
b101 $
b0 #
0"
1!
$end
#10000
b10 &
b10 +
b1 '
#20000
b11 &
b11 +
b10 '
#30000
0!
b1 #
b1 )
b1 -
b100 &
b100 +
b11 '
#40000
1!
b0 #
b0 )
b0 -
b101 &
b101 +
b100 '
#50000
0!
b101 #
b101 )
b101 -
b110 &
b110 +
b101 '
#60000
b100 #
b100 )
b100 -
b111 &
b111 +
b110 '
#70000
b1000 &
b1000 +
b111 '
#80000
b1 #
b1 )
b1 -
b1001 &
b1001 +
b1000 '
#90000
b1010 &
b1010 +
b1001 '
#100000
1!
b0 #
b0 )
b0 -
b1011 &
b1011 +
b1010 '
#110000
b1100 &
b1100 +
b1011 '
#120000
0!
b1 #
b1 )
b1 -
b1101 &
b1101 +
b1100 '
#130000
b1110 &
b1110 +
b1101 '
#140000
b1111 &
b1111 +
b1110 '
#150000
b1001 #
b1001 )
b1001 -
b0 &
b0 +
b1111 '
#160000
b10000 '
