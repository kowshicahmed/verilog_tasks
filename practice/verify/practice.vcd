$date
	Wed May  6 21:47:11 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 1 ! carry_out $end
$var wire 8 " alu_out [7:0] $end
$var reg 8 # A [7:0] $end
$var reg 8 $ B [7:0] $end
$var reg 4 % alu_sel [3:0] $end
$var integer 32 & i [31:0] $end
$scope module test_unit $end
$var wire 8 ' a [7:0] $end
$var wire 8 ( alu_out [7:0] $end
$var wire 4 ) alu_sel [3:0] $end
$var wire 8 * b [7:0] $end
$var wire 9 + tmp [8:0] $end
$var wire 1 ! carryout $end
$var reg 8 , alu_result [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 ,
b1001 +
b100 *
b1 )
b1 (
b101 '
b0 &
b1 %
b100 $
b101 #
b1 "
0!
$end
#10000
b100 "
b100 (
b100 ,
b10 %
b10 )
b1 &
#20000
b1 "
b1 (
b1 ,
b11 %
b11 )
b10 &
#30000
b100 %
b100 )
b11 &
#40000
b100 &
